 CREATE SCHEMA MDSJL;

 -- DROP TABLE MDSJL.ESTADO
 CREATE TABLE MDSJL.ESTADO (
	ESTA_ID INT IDENTITY(1,1) NOT NULL,
	ESTA_CO_ESTADO CHAR(2) NOT NULL,
	ESTA_TABLA NVARCHAR(50) NOT NULL,
	ESTA_DESCRIPCION NVARCHAR(100) NOT NULL,
	ESTA_DESCRIPCION_MP NVARCHAR(100) NOT NULL,
	ESTA_CREATED_AT DATETIME2(0) NULL,
	ESTA_UPDATED_AT DATETIME2(0) NULL,
	ESTA_DELETED_AT DATETIME2(0) NULL, 
	ESTA_COLOR VARCHAR(15) NULL, 
	ESTA_ORDEN CHAR(1) NULL,
	CONSTRAINT ESTADO_PKEY PRIMARY KEY (ESTA_ID)
)

-- DROP TABLE MDSJL.TIPO_DOCUMENTO
CREATE TABLE MDSJL.TIPO_DOCUMENTO (
	TIPDOC_ID varchar(3) NOT NULL,
	TIPDOC_DESCRIPCION NVARCHAR(191) NOT NULL,
	TIPDOC_CREATED_AT DATETIME2(0) NULL,  
	TIPDOC_UPDATED_AT DATETIME2(0) NULL,
	TIPDOC_DELETED_AT DATETIME2(0) NULL,
	CONSTRAINT TIPO_DOCUMENTO_PKEY PRIMARY KEY (TIPDOC_ID)
)

 
 -- DELETE FROM MDSJL.USUARIO

SELECT * FROM MDSJL.USUARIO 

 CREATE TABLE MDSJL.USUARIO (
 	USU_ID BIGINT IDENTITY(1,1) NOT NULL, 
	-- COD_USUARIO NVARCHAR(30) NOT NULL,
	USU_TIPO_PERSONA NVARCHAR(2) NULL,
	USU_TIPO_DOCUMENTO NVARCHAR(2) NULL, 
	USU_NUMERO_DOCUMENTO NVARCHAR(20) NULL, --> DNI / PASATPORTE / RUC / CARNET

	USU_APE_PATERNO NVARCHAR(200) NULL,
	USU_APE_MATERNO NVARCHAR(200) NULL,
	USU_NOMBRES NVARCHAR(200) NULL,
	
	USU_RAZON_SOCIAL NVARCHAR(200) NULL,
	USU_DIRECCION NVARCHAR(200) NULL, 

	USU_DEPARTAMENTO VARCHAR(2) NULL,
	USU_PROVINCIA VARCHAR(2) NULL,
	USU_DISTRITO VARCHAR(2) NULL,

	USU_IND_ESTADO CHAR(1) NULL,
	USU_CLAVE NVARCHAR(255) NOT NULL,
	USU_NU_CELULAR CHAR(9) NULL,
	USU_CORREO NVARCHAR(200) NULL,

	USU_FEC_REGISTRO DATETIME2(0) NULL,
	USU_FEC_MODIFICACION DATETIME2(0) NULL,

	USU_FEC_NACE DATE NULL, --
	USU_SEXO VARCHAR(2) NULL, --
	IMAGEN NVARCHAR(MAX) NULL, --
	ID_ROLES SMALLINT NULL,
	
	ID_REPRESENTANTE BIGINT NULL,
    CONSTRAINT PK_USUARIO PRIMARY KEY (USU_ID), 
); 
 

UPDATE MDSJL.SOLICITUD 
	SET CREATED_BY = CAST(CREATED_BY as NVARCHAR(20)),
	 UPDATED_BY = CAST(UPDATED_BY as NVARCHAR(20))

-- Luego modificar las columnas
ALTER TABLE MDSJL.SOLICITUD
ALTER COLUMN CREATED_BY NVARCHAR(20) NULL;

ALTER TABLE MDSJL.SOLICITUD
ALTER COLUMN UPDATED_BY NVARCHAR(20) NULL;


SELECT * FROM MDSJL.SOLICITUD
 -- DROP TABLE MDSJL.SOLICITUD  
 CREATE TABLE MDSJL.SOLICITUD (
    SOLI_ID BIGINT IDENTITY(1,1) NOT NULL,
    SOLI_NU_EMI NVARCHAR(191) NULL,
	SOLI_NU_ANN NVARCHAR(10) NULL,
    SOLI_FECHA_EMISION DATETIME2(0) NULL,	
    SOLI_FECHA DATETIME2(0) NULL,	

    SOLI_NRO_EXPEDIENTE NVARCHAR(50) NULL,
    TIPO_DOCUMENTO_ID VARCHAR(3)  NULL, 
    SOLI_NUMERO_DOCUMENTO NVARCHAR(50) NULL,

    SOLI_ASUNTO NVARCHAR(1000) NOT NULL,
	SOLI_FOLIOS INT NULL,
	SOLI_COD_TUPA NVARCHAR(255) NULL,

	CREATED_AT DATETIME2(0) DEFAULT GETDATE() NULL, 
    UPDATED_AT DATETIME2(0) NULL,
    DELETED_AT DATETIME2(0) NULL,

	CREATED_BY NVARCHAR(20) NULL, -- EL SOLICITANTE NRO DE DOCUMENTO
    UPDATED_BY NVARCHAR(20) NULL,

	COD_USUARIO NVARCHAR(30) NOT NULL,
    SOLI_FECHA_OBSERVACION DATETIME2(0) NULL,
    SOLI_OBSERVACION NVARCHAR(MAX) NULL,
    SOLI_FECHA_LIMITE_SUBSANACION DATETIME2(0) NULL,
    SOLI_FECHA_SUBSANACION DATETIME2(0) NULL,
	SOLI_OBSERVADO_BY NVARCHAR(50) NULL,
	SOLI_FILE_OBSERVACION NVARCHAR(150) NULL,
	SOLI_ESTADO_ID INT NOT NULL,  --*

    CREATED_IP NVARCHAR(50) NULL,
    UPDATED_IP NVARCHAR(50) NULL,
	CONSTRAINT FK_SOLICITUD_TIPODOCUMENTO FOREIGN KEY (TIPO_DOCUMENTO_ID) REFERENCES MDSJL.TIPO_DOCUMENTO(TIPDOC_ID),
    CONSTRAINT PK_SOLICITUD PRIMARY KEY (SOLI_ID)
);


-- DROP TABLE MDSJL.HISTORIAL_SOLICITUD 
 CREATE TABLE MDSJL.HISTORIAL_SOLICITUD (
    HIS_ID BIGINT IDENTITY(1,1) NOT NULL,
    HIS_NUMERO NVARCHAR(191) NULL,
	HIS_NU_ANN NVARCHAR(10) NULL, 
	SOLICITUD_ID BIGINT NOT NULL,
	CREATED_AT DATETIME2(0) NULL, 
	CREATED_BY INT NULL,  
	COD_USUARIO NVARCHAR(30) NOT NULL,
	HIS_ESTADO INT NOT NULL,  --*
	HIS_FECHA_OBSERVACION DATETIME2(0) NULL,
    HIS_OBSERVACION NVARCHAR(MAX) NULL,
	HIS_COD_TUPA NVARCHAR(255) NULL,
	SOLI_OBSERVADO_BY NVARCHAR(50) NULL, 
    HIS_ASUNTO NVARCHAR(1000) NOT NULL,
	CONSTRAINT FK_HISTORIAL_SOLICITUD_SOLICITUD FOREIGN KEY (SOLICITUD_ID) REFERENCES MDSJL.SOLICITUD (SOLI_ID),
    CONSTRAINT PK_HISTORIAL_SOLICITUD PRIMARY KEY (HIS_ID)
);

-- DROP TABLE MDSJL.ARCHIVO_DOCUMENTO 
 CREATE TABLE MDSJL.ARCHIVO_PRINCIPAL (
	ARCHIPRIN_ID BIGINT IDENTITY(1,1) NOT NULL,
	SOLICITUD_ID BIGINT NOT NULL,
	ARCHIPRIN_NOMBRE_FILE_ORIGEN NVARCHAR(191) NOT NULL,
	ARCHIPRIN_FILE VARBINARY(MAX) NULL,
    CREATED_AT DATETIME2(0) NULL,
    UPDATED_AT DATETIME2(0) NULL,
    DELETED_AT DATETIME2(0) NULL,
	ARCHIPRIN_NOMBRE_FILE varchar(150) NULL,
	ARCHIPRIN_IS_UPLOAD CHAR(1) NULL,
	CONSTRAINT FK_ARCHIVO_PRINCIPAL_SOLICITUD FOREIGN KEY (SOLICITUD_ID) REFERENCES MDSJL.SOLICITUD (SOLI_ID),
	CONSTRAINT PK_ARCHIVO_PRINCIPAL PRIMARY KEY (ARCHIPRIN_ID)
);

-- DROP TABLE MDSJL.ANEXO
CREATE TABLE MDSJL.ANEXO (
    ANEX_ID BIGINT IDENTITY(1,1) NOT NULL,
    ANEX_NUMERO INT NULL,
    SOLICITUD_ID BIGINT NOT NULL,
    ANEX_NOMBRE_FILE_ORIGEN NVARCHAR(191) NOT NULL,
    ANEX_DETALLE NVARCHAR(191) NULL,
    ANEX_IS_UPLOAD NVARCHAR(191) NULL,
    ANEX_FILE VARBINARY(MAX) NULL,
    ANEX_IND_HABILITADO CHAR(1) NULL,
    ANEX_OBSERVACION NVARCHAR(191) NULL,
    CREATED_AT DATETIME2(0) NULL,
    UPDATED_AT DATETIME2(0) NULL,
    DELETED_AT DATETIME2(0) NULL,
    ANEX_NOMBRE_FILE NVARCHAR(150) NULL,
    CONSTRAINT PK_ANEXO PRIMARY KEY (ANEX_ID),
	CONSTRAINT FK_ANEXO_SOLICITUD FOREIGN KEY (SOLICITUD_ID) REFERENCES MDSJL.SOLICITUD(SOLI_ID)
);

==========================================================================================================

 -- ======================================================================================================================================
 -- [IDOSGD].[PK_SGD_MESA_VIRTUAL_CIUDADANO]
 -- ======================================================================================================================================

CREATE SCHEMA MDSJL;

SELECT * FROM IDOSGD.TDTR_ESTADOS
EXEC sp_help 'IDOSGD.TDTV_REMITOS'; 

SELECT * FROM IDOSGD.TDTC_EXPEDIENTE
SELECT * FROM IDOSGD.TDTR_DEPENDENCIA_MP
SELECT * FROM IDOSGD.RHTM_DEPENDENCIA
SELECT * FROM IDOSGD.TDTR_PERMISO_MP
SELECT * FROM IDOSGD.SI_ELEMENTO

-- DROP TABLE MDSJL.ESTADO
-- DROP TABLE MDSJL.TIPO_DOCUMENTO
-- DROP TABLE MDSJL.USUARIO
-- DROP TABLE MDSJL.SOLICITUD 
-- DROP TABLE MDSJL.HISTORIAL_SOLICITUD
-- DROP TABLE MDSJL.ARCHIVO_DOCUMENTO 
-- DROP TABLE MDSJL.ANEXO

SELECT DISTINCT UBDEP, NODEP FROM IDOSGD.IDTUBIAS

SELECT UBDEP, UBPRV, NOPRV FROM IDOSGD.IDTUBIAS
WHERE UBPRV <> '00'
GROUP BY UBDEP, UBPRV, NOPRV
SELECT * FROM IDOSGD.TDTX_ANI_SIMIL
SELECT * FROM  [IDOSGD].LG_PRO_PROVEEDOR }


SELECT * FROM IDOSGD.TDTR_ESTADOS te 
--- ===========================================================================================================================
SELECT * FROM MDSJL.ESTADO 

SELECT * FROM MDSJL.TIPO_DOCUMENTO 
SELECT * FROM MDSJL.USUARIO 
SELECT * FROM MDSJL.SOLICITUD  
SELECT * FROM MDSJL.HISTORIAL_SOLICITUD 
SELECT * FROM MDSJL.ARCHIVO_DOCUMENTO  
SELECT * FROM MDSJL.ANEXO


SELECT * FROM MDSJL.ESTADO e 

-- Luego modificar las columnas
ALTER TABLE MDSJL.ESTADO
ALTER COLUMN ESTA_COLOR NVARCHAR(100) NULL;

ALTER TABLE MDSJL.ESTADO
ALTER COLUMN ESTA_COLOR NVARCHAR(100) NULL;


-- ===================================================================================================
-- =============================   ROLES  ================
-- ===================================================================================================

CREATE TABLE [MDSJL].[OPCIONES](
	[OPCI_CODIGO] [int] IDENTITY(1,1) PRIMARY KEY NOT NULL,
	[OPCI_TIPO] [int] NULL,
	[OPCI_SUB_CODIGO] [int] NULL,
	[OPCI_ICON] [varchar](100) NULL,
	[OPCI_HREF] [varchar](100) NULL,
	[OPCI_NOMBRE] [varchar](100) NULL,
	[OPCI_SUB_NOMBRE] [varchar](100) NULL,
	[OPCI_ICON_NOTIFICA] [varchar](100) NULL,
	[OPCI_ORDER] [int] NULL,
	[OPCI_ESTADO] [int] NULL,
)

CREATE TABLE [MDSJL].[ROL](
	[ROL_CODIGO] [int] IDENTITY(1,1) PRIMARY KEY NOT NULL,
	[ROL_NOMBRE] [varchar](150) NOT NULL,
	[ROL_NC_NOMBRE] [varchar](150) NOT NULL,
	[ROL_ESTADO] [int] NULL,
)


CREATE TABLE [MDSJL].[PERMISOS](
	[PERM_CODIGO] [int] IDENTITY(1,1) NOT NULL,
	[ROL_CODIGO] [int] NOT NULL,
	[OPCI_CODIGO] [int] NOT NULL,
	[PERM_ESTADO] [int] NOT NULL
) 

--DBCC CHECKIDENT ('MDSJL.ROL', RESEED, 1);
SELECT * FROM [MDSJL].[USUARIO]
SELECT * FROM [MDSJL].[OPCIONES]
SELECT * FROM [MDSJL].[ROL]
SELECT * FROM  [MDSJL].[PERMISOS]
 
-- ===================================================================================================
-- =============================   PROCEDURE ROLES  ================
-- ===================================================================================================
CREATE PROCEDURE [MDSJL].[SP_OPCIONES]
	@ACCION INT = 0,
	@ROL_CODIGO INT = 0
AS
IF(@ACCION = 1) GOTO SELECT_OPCION_NABVAR
RETURN
SELECT_OPCION_NABVAR:
BEGIN
	SET NOCOUNT ON;
	SELECT C.OPCI_CODIGO,
	C.OPCI_SUB_CODIGO,
	C.OPCI_TIPO,
    C.OPCI_ICON, 
    C.OPCI_HREF, 
    C.OPCI_NOMBRE,
    C.OPCI_SUB_NOMBRE,
    C.OPCI_ICON_NOTIFICA, 
    C.OPCI_ORDER,
    A.ROL_CODIGO,
    A.ROL_NOMBRE,
    A.ROL_NC_NOMBRE
    FROM [MDSJL].ROL A
    INNER JOIN [MDSJL].PERMISOS B ON A.ROL_CODIGO = B.ROL_CODIGO
    INNER JOIN [MDSJL].OPCIONES C ON B.OPCI_CODIGO = C.OPCI_CODIGO
    WHERE 
		C.OPCI_ESTADO=1 
	AND B.PERM_ESTADO=1 
	AND A.ROL_CODIGO=@ROL_CODIGO
	ORDER BY C.OPCI_ORDER ASC
RETURN
END

-- ===================================================================================================
-- =============================   PROCEDURE SOLICITUD  ================
-- ===================================================================================================

ALTER PROCEDURE [MDSJL].[MOSTRAR_SOLICITUDES]
    @NUMERO_DOCUMENTO_PERSONA NVARCHAR(20) --  = ''
AS
BEGIN 
    BEGIN TRY
        BEGIN TRANSACTION;
        SELECT
        	SOLI.SOLI_ID,
            SOLI.SOLI_NU_EMI,
            SOLI.SOLI_FECHA,
            SOLI.SOLI_ASUNTO, 
            --ISNULL(SOLI.SOLI_OBSERVACION, '') AS SOLI_OBSERVACION,
            SOLI.SOLI_OBSERVACION,
            ISNULL(SOLI.SOLI_FECHA_OBSERVACION ,'') AS SOLI_FECHA_OBSERVACION,
            ISNULL(SOLI.SOLI_NRO_EXPEDIENTE,'')  AS  SOLI_NRO_EXPEDIENTE,
            ISNULL(SOLI.SOLI_FECHA_EMISION,'')  AS SOLI_FECHA_EMISION,
            ESTADO.ESTA_ID,
            ESTADO.ESTA_DESCRIPCION,
            ESTADO.ESTA_COLOR,
            (SELECT COUNT(*) 
             FROM MDSJL.ANEXO a 
             WHERE a.SOLICITUD_ID = SOLI.SOLI_ID
             AND a.ANEX_IND_HABILITADO = '1') AS CANTIDAD_ANEXO
        FROM MDSJL.SOLICITUD SOLI 
			INNER JOIN MDSJL.ESTADO ESTADO ON SOLI.SOLI_ESTADO_ID = ESTADO.ESTA_ID 
        WHERE 
            SOLI.CREATED_BY = @NUMERO_DOCUMENTO_PERSONA
            AND SOLI.SOLI_ESTADO_ID NOT IN (6)
        	ORDER BY SOLI.SOLI_FECHA ASC
           
        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        -- Si ocurre un error, revertir la transacción
        ROLLBACK TRANSACTION;

        -- Mostrar el mensaje de error
        DECLARE @ErrorMessage NVARCHAR(4000);
        DECLARE @ErrorSeverity INT;
        DECLARE @ErrorState INT;

        SELECT 
            @ErrorMessage = ERROR_MESSAGE(),
            @ErrorSeverity = ERROR_SEVERITY(),
            @ErrorState = ERROR_STATE();
           
        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
    END CATCH
END;




CREATE PROCEDURE [MDSJL].[FILTRAR_SOLICITUD]
	@NUMERO_DOCUMENTO_PERSONA NVARCHAR(20),
    @P_NU_EMI NVARCHAR(191) = '',
    @P_TIPO_EXPEDIENTE VARCHAR(3) = '',
    @P_ESTADO INT = 0,
    @P_DESDE DATE()= NULL,
    @P_HASTA DATE()= NULL
AS
BEGIN 
    BEGIN TRY
        BEGIN TRANSACTION;
       
        SELECT
        	SOLI.SOLI_ID,
            SOLI.SOLI_NU_EMI,
            SOLI.SOLI_FECHA,
            SOLI.SOLI_ASUNTO, 
            --ISNULL(SOLI.SOLI_OBSERVACION, '') AS SOLI_OBSERVACION,
            SOLI.SOLI_OBSERVACION,
            ISNULL(SOLI.SOLI_FECHA_OBSERVACION ,'') AS SOLI_FECHA_OBSERVACION,
            ISNULL(SOLI.SOLI_NRO_EXPEDIENTE,'')  AS  SOLI_NRO_EXPEDIENTE,
            ISNULL(SOLI.SOLI_FECHA_EMISION,'')  AS SOLI_FECHA_EMISION,
            ESTADO.ESTA_ID,
            ESTADO.ESTA_DESCRIPCION,
            ESTADO.ESTA_COLOR,
            (SELECT COUNT(*) 
             FROM MDSJL.ANEXO a 
             WHERE a.SOLICITUD_ID = SOLI.SOLI_ID
             AND a.ANEX_IND_HABILITADO = '1') AS CANTIDAD_ANEXO
        FROM MDSJL.SOLICITUD SOLI 
			INNER JOIN MDSJL.ESTADO ESTADO ON SOLI.SOLI_ESTADO_ID = ESTADO.ESTA_ID 
        WHERE 
		    SOLI.CREATED_BY = @NUMERO_DOCUMENTO_PERSONA
		    AND SOLI.SOLI_ESTADO_ID NOT IN (6)
		    AND (SOLI.SOLI_NU_EMI = '' OR SOLI.SOLI_NU_EMI LIKE '%' + @P_NU_EMI + '%')
		    AND (SOLI.TIPO_DOCUMENTO_ID = '' OR SOLI.TIPO_DOCUMENTO_ID IN (@P_TIPO_EXPEDIENTE))
		    AND (SOLI.SOLI_ESTADO_ID = 0 OR SOLI.SOLI_ESTADO_ID = @P_ESTADO)
		    AND (SOLI.SOLI_FECHA IS NULL OR CAST( SOLI.SOLI_FECHA AS DATE()) >= @P_DESDE)
		    AND (SOLI.SOLI_FECHA IS NULL OR SOLI.SOLI_FECHA) <= @P_HASTA)
            ORDER BY SOLI.SOLI_FECHA ASC
        COMMIT TRANSACTION;
    END TRY
   BEGIN CATCH
        -- Si ocurre un error, revertir la transacción
        ROLLBACK TRANSACTION;

        -- Captura y muestra un mensaje de error
        DECLARE @ErrorMessage NVARCHAR(4000);
        SET @ErrorMessage = 'Ocurrió un problema en la consulta: ' + ERROR_MESSAGE();
        RAISERROR (@ErrorMessage, 16, 1);
    END CATCH
END;


--============================================================
 
-- =========================================================


SELECT * FROM MDSJL.SOLICITUD s 
INNER JOIN MDSJL.ESTADO e ON s.SOLI_ESTADO_ID = e.ESTA_ID 

SELECT * FROM MDSJL.ESTADO e 

----====================================================================
---- =========== DATOS MAESTROS =========
----====================================================================

INSERT INTO [MDSJL].[PERMISOS] (ROL_CODIGO,OPCI_CODIGO,PERM_ESTADO) VALUES
	 (1,1,1),
	 (1,2,1),
	 (1,3,1),
	 (1,4,1),
	 (2,1,1),
	 (2,2,1);

INSERT INTO [MDSJL].[ROL] (ROL_NOMBRE,ROL_NC_NOMBRE,ROL_ESTADO) VALUES
	 (N'Administrador',N'Admin',1),
	 (N'Ciudadano',N'Ciudadano',1);


SELECT * FROM [MDSJL].[OPCIONES]
INSERT INTO [MDSJL].[OPCIONES] (OPCI_TIPO,OPCI_SUB_CODIGO,OPCI_ICON,OPCI_HREF,OPCI_NOMBRE,OPCI_SUB_NOMBRE,OPCI_ICON_NOTIFICA,OPCI_ORDER,OPCI_ESTADO) VALUES
	 (1,NULL,NULL,NULL,N'Mesa de Partes Virtual',NULL,NULL,1,1),
	 (2,1,N'<i data-feather="grid" class="align-self-center menu-icon"></i>',N'dashboard/',N'Dashboard',NULL,NULL,1,1),
	 (2,1,N'<i data-feather="grid" class="align-self-center menu-icon"></i>',N'tramite/solicitud/',N'Mis trámites',NULL,NULL,2,1),
	 (2,1,N'<i data-feather="grid" class="align-self-center menu-icon"></i>',N'observados/',N'Observados',NULL,NULL,3,1);


SELECT * FROM [MDSJL].[OPCIONES]
INSERT INTO [MDSJL].[USUARIO] (USU_TIPO_PERSONA,USU_TIPO_DOCUMENTO,USU_NUMERO_DOCUMENTO,USU_APE_PATERNO,USU_APE_MATERNO,USU_NOMBRES,USU_RAZON_SOCIAL,USU_NUMERO_RUC,USU_DIRECCION,USU_DEPARTAMENTO,USU_PROVINCIA,USU_DISTRITO,USU_IND_ESTADO,USU_CLAVE,USU_NU_CELULAR,USU_CORREO,USU_FEC_REGISTRO,USU_FEC_MODIFICACION,USU_FEC_NACE,USU_SEXO,IMAGEN,ID_ROLES,ID_REPRESENTANTE) VALUES
	 (N'1',N'1',N'76815943',N'Espinoza',N'Valera',N'Clinton Alex',N'Espinoza Valera Clinton Alex',NULL,N'asdasd',N'12',N'02',N'03',N'1',N'$2y$10$Smy1COaWbXEe/rcuZZYoSe/JmfA4DoKe17wDYzJfKbXsMzy4UB8sa',N'916533919',N'alex@gmail.com','2024-11-01 17:04:34.000','2024-11-01 17:04:34.000',NULL,NULL,NULL,1,NULL);

